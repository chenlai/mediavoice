// Prerequirement: build the 2 libs off-line before running this sample
// 1) set up your ndk.dir/sdk.dir in local.properties
// 2) on terminal, execute "gradlew :gmath:distributeLib :gperf:distributeLib
// libs will be created into hello-libs/distribution directory
apply plugin: 'com.android.model.application'

// Root of 3rd party lib(s): location could be anywhere on the host system
def lib_distribution_root = '../distribution'
model {
    repositories {
        libs(PrebuiltLibraries) {
            // Configure one pre-built lib: shared
            ndktest {
                // Inform Android Studio where header file dir for this lib
                headers.srcDir "${lib_distribution_root}/ndktest/include"
                // Inform Android Studio where lib is -- each ABI should have a lib file
                binaries.withType(SharedLibraryBinary) {
                    sharedLibraryFile = file("${lib_distribution_root}/ndktest/lib/${targetPlatform.getName()}/libndktest.so")
                }
            }

            webrtc {
                // Inform Android Studio where header file dir for this lib
                headers.srcDir "${lib_distribution_root}/webrtc/include"
                // Inform Android Studio where lib is -- each ABI should have a lib file
                binaries.withType(SharedLibraryBinary) {
                    sharedLibraryFile = file("${lib_distribution_root}/webrtc/lib/${targetPlatform.getName()}/libgsmediatest.so")
                }
            }

        }
    }
    android {
        compileSdkVersion = 24
        buildToolsVersion = '24.0.1'

        defaultConfig {
            applicationId = 'lchen.mediavoic'
            minSdkVersion.apiLevel = 13
            targetSdkVersion.apiLevel = 24
            versionCode = 1
            versionName = '1.0'
        }
        ndk {
            platformVersion = 21
            moduleName = 'mediavoice-jni'
            toolchain = 'clang'
            stl = 'gnustl_static'
            cppFlags.addAll(['-std=c++11'])
            ldLibs.addAll(['android', 'log'])
            abiFilters.addAll(['armeabi-v7a'])

            // build a default combined apk including all ABIs.
            // abiFilters.addAll(['x86'])
        }
        sources {
            main {
                jni {
                    dependencies {
                        library 'ndktest' linkage 'shared'
                        library 'webrtc' linkage 'shared'
                        // if gperf were *.a, change shared --> static
                    }
                }
                jniLibs {
                    // for shared lib, lib need to be pushed to the target too
                    // Once libs are copied into app/src/main/jniLibs directory,
                    // Android Studio will pack them into APK's lib/ directory
                    // Here we like to avoid another duplication by pointing
                    // to the files that containing our libs' distribution location
                    // so the same file is used by compiler at host, also packed
                    // into APk to be used at Target (phone/tablet)
                    source {
                        srcDir "${lib_distribution_root}/ndktest/lib"
                        // if gperf is static lib, no need to add it into jniLibs
                    }
                    source {
                        srcDir "${lib_distribution_root}/webrtc/lib"
                        // if gperf is static lib, no need to add it into jniLibs
                    }

                }

            }
        }
        buildTypes {
            release {
                minifyEnabled false
                proguardFiles.add(file('proguard-android.txt'))
            }
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile 'com.android.support:appcompat-v7:24.0.0'
}
